package com.example.demo.model;

import com.example.demo.Criteria;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * This class was generated by MyBatis Generator.
 * This class corresponds to the database table t_register_auth
 *
 * @author EDZ
 * @since 2020-08-03
 */
public class RegisterAuthExample {
    /**
     * '自增id'
     */
    public static final String ID = "id";

    /**
     * '商户id'
     */
    public static final String SAAS_ID = "saas_id";

    /**
     * '用户id'
     */
    public static final String UID = "uid";

    /**
     * '注册账户的渠道类型 0：手机号 1：邮箱 2：微信相关渠道 3：QQ渠道 4：微博渠道 5：身份证 6：其他；'
     */
    public static final String CHANNEL_TYPE = "channel_type";

    /**
     * '渠道名称 跟channel_type对应'
     */
    public static final String CHANNEL_NAME = "channel_name";

    /**
     * '与channelType对应，如手机号、邮箱、身份证号、微信openId等'
     */
    public static final String OPEN_ID = "open_id";

    /**
     * '对应业务方注册渠道的应用ID'
     */
    public static final String APP_ID = "app_id";

    /**
     * '微信unionid'
     */
    public static final String WX_UNION_ID = "wx_union_id";

    /**
     * '渠道认证密码'
     */
    public static final String PASSWORD = "password";

    /**
     * '邀请码'
     */
    public static final String INVITATION_CODE = "invitation_code";

    /**
     * '1：永久有效 2：限时有效'
     */
    public static final String IS_FOREVER = "is_forever";

    /**
     * '账户有效开始时间'
     */
    public static final String EFFECTIVE_START_TIME = "effective_start_time";

    /**
     * '账户有效结束时间'
     */
    public static final String EFFECTIVE_END_TIME = "effective_end_time";

    /**
     * '注册时间'
     */
    public static final String REGISTER_TIME = "register_time";

    /**
     * '用户来源 0用户注册 1后台导入'
     */
    public static final String SOURCE_TYPE = "source_type";

    /**
     * '创建时间'
     */
    public static final String CREATE_TIME = "create_time";

    /**
     * '更新时间'
     */
    public static final String UPDATE_TIME = "update_time";

    /**
     * 特定字段排序, e.g:order by id desc
     */
    private String orderByClause;

    /**
     * 查询记录是否需要去重，distinct=true表示需要
     */
    private boolean distinct;

    /**
     * 查询条件列表，中间用or连接
     */
    private List<Criteria> oredCriteria;

    public RegisterAuthExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * set orderByClause
     * 
     * @param orderByClause	特定字段排序
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * get orderByClause
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * set distinct
     * 
     * @param distinct	是否需要去重
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * is distinct
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * get oredCriteria
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * 新增一个criteria查询条件
     * 
     * @param criteria	查询条件
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * 新增一个criteria查询条件
     */
    public Criteria or() {
        Criteria criteria = new Criteria();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * 创建一个criteria查询条件
     */
    public Criteria createCriteria() {
        Criteria criteria = new Criteria();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * 清除所有criteria查询条件
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }
}